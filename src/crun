#!/usr/bin/env python3

# Author: Connor Bray
# Date: 6/8/2022
# Purpose: Run programs from command line and open in browser

# Imports
import argparse
import webbrowser
import subprocess
import os
import json

# Pull config from /usr/local/etc
# Ask for firstlast in setup. If they enter work email or AD name, remove the . and the @tylertech.com from the end

# CONFIG
# USER = 'connorbray'
CRUN_USER = ''
HOSTNAME = 'eerpdev.dev.tylertechnologies.com'

# Main function
# program : String to represent program name
# arg_list : 
def main(program, arg_list):
    '''
    Add doc string
    '''

    # Check if GAS is running
    gasOffline = not (subprocess.run(['pgrep', '-lf', 'fastcgidispatch'], capture_output=True, text=True).stdout)

    # Start GAS in the background if it is not running
    if gasOffline:
        subprocess.Popen(['startgas'], stdout=subprocess.PIPE, stderr=subprocess.DEVNULL)

    # Build program
    cwd = os.curdir
    os.chdir('/workspace/src')
    subprocess.run(['bb', program])
    os.chdir(cwd)
        
    # Format URL
    args = '?'
    for arg in arg_list:
        args += f"Arg={arg}&"
    url = f'https://{CRUN_USER}.{HOSTNAME}/gas/ua/r/application/{program}{args}'

    # Open URL in new tab
    webbrowser.open_new_tab(url)

    return 0

def getUserFromConfig():

    try:
        # Get user from config
        with open('/usr/local/etc/crun_config.json', 'r') as f:
            config = json.load(f)
        user = config['user']
    except: # return 0 if there is error getting user from file
        return 0

    return user

def getUser():

    # try: 
    #     user = os.environ['CRUN_USER']
    # except KeyError: # get value from config file and set env variable to match that
    #     user = getUserFromConfig()
    
    user = getUserFromConfig()

    if user:
        return user

    else:
        print("Error getting user")
        exit()
        return 0

if __name__ == '__main__':

    # Create program arguments
    parser = argparse.ArgumentParser('run')
    parser.add_argument('program', type=str, help='munis program to run in browser', )
    parser.add_argument('program_args', nargs='*', type=str, help='pass args into program')
    args = parser.parse_args()
    CRUN_USER = getUser()

    # Pass arguments to main
    main(args.program, args.program_args)